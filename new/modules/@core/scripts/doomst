#!/usr/bin/env sh

. "$CORE_LIBS/stdin-or"
. "$CORE_LIBS/is-process-running"

# NAME
#   doomst - Doomguy themed dunst notification script
# 
# SYNOPSIS
#   doomst -t <title> -m <message> -p <type>
# 
# DESCRIPTION
#   Doomguy themed dunst notification
# 
# OPTIONS
#   -t, --title TITLE      Title of the notification
#   -m, --message MESSAGE  Message of the notification
#   -p, --type TYPE        Type of the notification (default: info)
#                          Values: info, error, success
#
# SEE ALSO
#  dunst(1)

while [ "$#" -gt 0 ]; do
  case $1 in
    -p|--type)
      if [ "$2" ]; then
        type="$2"; shift
      else
        echo '"--type" requires a non-empty option argument.' >&2
        exit 1
      fi
    ;;
    -t|--title)
      if [ "$2" ]; then
        title="$2"; shift
      else
        echo '"--title" requires a non-empty option argument.' >&2
        exit 1
      fi
    ;;
    -m|--message)
      if [ "$2" ]; then
        message="$2"; shift
      else
        echo '"--message" requires a non-empty option argument.' >&2
        exit 1
      fi
    ;;
    -?*)
      echo "Error: Unknown option (ignored): $1" >&2
      exit 1
    ;;
    *) 
      break
    ;;
  esac
  shift
done

title=$(stdin_or "$title")

case ${type:-info} in
  success) 
    icon="$HOME/doomguy.png"
    urgency="normal"
  ;;
  error) 
    icon="$HOME/doomguy-blood.png" 
    urgency="critical"
  ;;
  *) 
    icon="$HOME/doomguy.png" 
    urgency="normal"
  ;;
esac

if is_process_running dunst; then
  dunstify --icon "$icon" \
    --urgency $urgency \
    "$title" "$message"
else
  echo "Dunst is not running, skipping notification" >&2
  exit 1
fi
