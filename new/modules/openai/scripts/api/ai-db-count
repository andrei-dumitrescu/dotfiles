#!/usr/bin/env sh

# NAME 
#  ai-db-count - Count records for a given table
#
# SYNOPSIS
#  ai-db-count <-t table_name> [-w where_clause]
#
# DESCRIPTION
#  Count records in a table. By default all records are counted, but a WHERE
#  clause can be provided to count only matching records.
#
# OPTIONS
#  -t, --table <table_name>
#   The table to query.
#
#  -w, --where [where_clause]
#   The WHERE clause to use when querying the database.
#
# ERROR CODES
#  1 Input error: unknown flag provided, missing value for flag or missing
#    required flag
#
# ENVIRONMENT
#  OPENAI_DB_FILE
#   The SQLite database file.
#
# SEE ALSO
#  sqlite3(1)

# Parse flags
while [ "$#" -gt 0 ]; do
  case $1 in
    -w|--where) 
      if [ "$2" ] && [ "${2#-}" = "$2" ]; then
        where=$2; shift
      else
        echo "error: argument $1 requires a value" >&2
        exit 1
      fi
    ;;
    -t|--table) 
      if [ "$2" ] && [ "${2#-}" = "$2" ]; then
        table=$2; shift
      else
        echo "error: argument $1 requires a value" >&2
        exit 1
      fi
    ;;
    --) shift; break ;;
    -?*) 
      echo "error: unknown flag $1" >&2
      exit 1
    ;;
    *) break ;;
  esac
  shift
done

# Input validation
if [ -z "$table" ] && [ -n "$where" ]; then
  echo "error: -w|--where requires -t|--table" >&2 
  exit 1
fi

# Functions
get_table_names() {
  sqlite3 "$OPENAI_DB_FILE" "SELECT name FROM sqlite_master WHERE type='table';"
}

count_rows_in_table() {
  query="SELECT COUNT(*) FROM $1"
  if [ -n "$where" ]; then
    query="$query WHERE $where"
  fi

  sqlite3 "$OPENAI_DB_FILE" "$query"
}

# Main
if [ -z "$table" ]; then
  for table in $(get_table_names); do
    echo "$table: $(count_rows_in_table "$table")"
  done
else
  count_rows_in_table "$table"
fi
