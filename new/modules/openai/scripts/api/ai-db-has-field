#!/usr/bin/env sh

# NAME 
#  ai-db-has-field - Check if a table has a given field
#
# SYNOPSIS
#  ai-db-has-field <-t table_name> <-f field_name>
#
# DESCRIPTION
#  Check if a table has a given field. Returns 0 if the field exists, 1 if it
#  does not.
#
# OPTIONS
#  -t, --table <table_name>
#   The table to query.
#
#  -f, --field <field_name>
#   The field to check for.
#
# ERROR CODES
#  1 Input error: unknown flag provided, missing value for flag or missing
#    required flag
#  2 Table does not exist
#  3 Field does not exist
#
# ENVIRONMENT
#  OPENAI_DB_FILE
#   The SQLite database file.
#
# SEE ALSO
#  sqlite3(1)

# Parse flags
while [ "$#" -gt 0 ]; do
  case $1 in
    -t|--table) 
      if [ "$2" ] && [ "${2#-}" = "$2" ]; then
        table="$2"; shift
      else
        echo "error: argument $1 requires a value" >&2
        exit 1
      fi
    ;;
    -f|--field) 
      if [ "$2" ] && [ "${2#-}" = "$2" ]; then
        field="$2"; shift
      else
        echo "error: argument $1 requires a value" >&2
        exit 1
      fi
    ;;
    --) shift; break ;;
    -?*) 
      echo "error: unknown flag $1" >&2
      exit 1
    ;;
    *) break ;;
  esac
  shift
done

# Input validation
if [ -z "$table" ]; then
  echo "error: missing required flag -t|--table" >&2
  exit 1
fi

if [ -z "$field" ]; then
  echo "error: missing required flag -f|--field" >&2
  exit 1
fi

# Functions
get_all_table_names() {
  sqlite3 "$OPENAI_DB_FILE" "SELECT name FROM sqlite_master WHERE type='table';"
}

get_field_names() {
  sqlite3 --json "$OPENAI_DB_FILE" "PRAGMA table_info($1);" | jq -r '.[].name'
}

# Main
if ! get_all_table_names | grep -c "$table" > /dev/null; then
  echo "error: table $table does not exist" >&2
  exit 2
fi

if ! get_field_names "$table" | grep -c "$field" > /dev/null; then
  exit 3
fi
