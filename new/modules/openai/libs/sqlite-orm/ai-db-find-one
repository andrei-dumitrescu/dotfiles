#!/usr/bin/env dash

# NAME
#  ai-db-find-one - Find a single record for a given table
#
# SYNOPSIS
#  ai-db-find-one <-t table_name> <-w where_clause> [-f filter_clause]
#
# DESCRIPTION
#  Find a single record in a table by providing a sqlite WHERE clause. By
#  default all fields are included, but a filter can be provided to limit the
#  fields returned.
#
# OPTIONS
#  -w, --where <where_clause>
#   The WHERE clause to use when querying the database.
#
#  -t, --table <table_name>
#   The table to query.
#   
#  -f, --filter [filter_clause]
#   The filter clause to use when querying the database. Defaults to "*".
# 
# ERROR CODES
#  1 Input error: unknown flag provided, missing value for flag or missing
#    required flag
#  2 No items found in table with WHERE clause
#  3 More than one item found in table with WHERE clause
#
# ENVIRONMENT
#  OPENAI_DB_FILE
#   The SQLite database file.

# ╭───┤ Input validation 
# ╰─

parse_flags() {
  while [ "$#" -gt 0 ]; do
    case $1 in
      -w|--where) 
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          where=$2; shift
        else
          echo "error: argument $1 requires a value" >&2
          exit 1
        fi
      ;;
      -t|--table) 
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          table=$2; shift
        else
          echo "error: argument $1 requires a value" >&2
          exit 1
        fi
      ;;
      --) shift; break ;;
      *) break ;;
    esac
    shift
  done
}

parse_flags "$@"

if [ -z "$where" ]; then
  echo "error: missing required flag -w|--where" >&2
  exit 1
fi

if [ -z "$table" ]; then
  echo "error: missing required flag -t|--table" >&2
  exit 1
fi

# ╭──────────────────────
# │ Main. Start here.
# ╰────────

data=$(ai-db-find-many "$@")

if [ -z "$data" ]; then
  echo "error: no item found in table $table with WHERE $where" >&2
  exit 2
fi

if [ "$(echo "$data" | jq 'length')" -gt 1 ]; then
  echo "error: more than one item found in table $table with WHERE $where" >&2
  exit 3
fi

printf "%s" "$data" | jq '.[0]'

