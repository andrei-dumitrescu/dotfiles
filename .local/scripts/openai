#!/usr/bin/bash -e

. "$LIBRARY_HOME/die.sh"
. "$LIBRARY_HOME/read-stdin-or.sh"
. "$LIBRARY_HOME/openai"

# Call OpenAI's /completions endpoint to get a response to a prompt
#
# Arguments:
#  $1: Prompt
#  -i: (Optional) Identity description passed as system role
#  -t: (Optional) Temperature. Defaults to 0.5
promptCompletion() {
  query=$(rofi -dmenu \
    -p "󰧑 ask:" 
  )

  escapedQuery=$(echo -e "Give only the asnwer without elaborating, echoing the question or explaining unless explicitly asked. For example if I ask what is 2+2, you will asnwer 4, not 'The sum of 2 + 2 equals to 4'\n\nHere's my question:\n\n$query" \
    | jq --slurp --raw-input '@json'
  )

  doomst --type info --title "󰧑 completion" --message "$query"

  response=$(curl -s https://api.openai.com/v1/chat/completions \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -H "OpenAI-Organization: $OPENAI_ORG_ID" \
    -d '{
      "model": "gpt-3.5-turbo",
      "messages": [
        {"role": "user", "content": '"$escapedQuery"'}
      ],
      "temperature": 0.7
    }'
   )

  answer=$(echo "$response" \
    |  jq --raw-output '.choices[0].message.content' 
  )

  if [ -n "$answer" ]; then
    echo "$answer" | xclip -selection clipboard
    doomst --type success --title "󰧑 completion" --message "$answer"
    return 0
  fi

  return 1
}


# Ask the user to select a answer from one of the questions in the completion
# directory.
#
# Arguments:
# $1: Prompt
#
# Returns:
# The name of the selected answer path. If no mached snippet is found, the query
# is returned.
chooseCompletion() {
  delimiterCount=$(echo "$OPENAI_COMPLETION_HOME" \
    | grep --only-matching "/" \
    | wc --lines
  ) 

  fzfResult=$(rg --files --glob '**/answer.md' \
    --sortr modified \
    "$OPENAI_COMPLETION_HOME" \
    | fzf \
      --preview 'bat --color=always --style=numbers --line-range :500 {}' \
      --preview-window=right:85:wrap \
      --header "$1" \
      --delimiter "/" \
      --with-nth=$(( delimiterCount + 2 )) \
      --print-query
    )

  query=$(echo "$fzfResult" | head -n 1)
  answerPath=$(echo "$fzfResult" | tail -n 1)

  if [ -z "$answerPath" ]; then
    echo "$query"
  else
    echo "$answerPath"
  fi
}

# Open "rofi" to ask a question and copy the answer to the clipboard.
prompt() {
  query=$(rofi -dmenu -width 800 -p "󰧑 ask:")

  if [ -n "$query" ]; then
    completionPath=$(chooseCompletion "󰧑 copy answer:")

    if [ -n "$completionPath" ] && [ -f "$completionPath" ]; then
      copy "$(cat "$completionPath")"
    fi
  fi
}

case ${1-ask-copy} in
  copy)
    completionPath=$(chooseCompletion "󰧑 copy answer:")

    if [ -n "$completionPath" ] && [ -f "$completionPath" ]; then
      copy "$(cat "$completionPath")"
    else
      answer=$(completion "$completionPath")
      copy "$answer"
    fi
  ;;
  ask-copy)
    alacritty --title layout-center --command openai copy
  ;;
  prompt)
    promptCompletion
  ;;
  *) die "Command \"$1\" not defined" ;;
esac
