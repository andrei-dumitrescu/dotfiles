#!/usr/bin/sh

SCRIPT_NAME='\~/.local/scripts/notes'
CMD=${1:-ls}

NOTES_HOME="$HOME/Notes"
NOTES_SRC="$NOTES_HOME/src"
NOTES_DIST="$NOTES_HOME/dist"

TODAY_PATH="$NOTES_SRC/$(date +%Y)/$(date +%m.%B)/$(date +%d.%A)"

mkdir -p "$TODAY_PATH"
mkdir -p "$NOTES_DIST"

case $CMD in
  #
  # Create a new markdown file, or open existing, for today's notes
  #
  create)
    NOTE_PATH="$NOTES_SRC/draft/$(date +%y-%j).md"

    if [ ! -f "$NOTE_PATH" ]; then
      printf "# %s\n" "$(date '+%A, %d %B %Y')" > "$NOTE_PATH"
    fi

    printf "\n## %s\n" "$(date '+%H:%M')" >> "$NOTE_PATH"

    # Relevant context for vim's NerdTree
    cd "$NOTES_SRC" && nvim -c "norm G" \
      -c "norm zz" \
      -c "set spell" \
      "$NOTE_PATH"
  ;;

  #
  #
  #
  find)
    NOTE=$(notes ls \
    | rofi -dmenu \
      -eh 4 \
      -sep '|' \
      -p "notes" \
      -i \
      -markup-rows \
      -lines 4 \
      -case-sensitive false)

    if [ ! -z "$NOTE" ]
    then
      echo "$NOTE" \
        | sanitize html \
        | tail -n 1 \
        | xargs st -t such-important -e notes open
    fi
  ;;

  #
  # List all notes
  #
  ls)
    ALL_NOTES=$(rg --files $NOTES_SRC | rg .md | sort -r)
    META_COUNT=2
    
    for NOTE_PATH in $ALL_NOTES
    do
      TITLE=$(rg "^# " --max-count 1 $NOTE_PATH | sed -e "s/# //g")
      META=$(head -n $META_COUNT $NOTE_PATH)

      printf "${TITLE:-'--'}\n<small>$META\n$NOTE_PATH</small>|"
    done
  ;;

  #
  # Open by absolute path in VIM
  #
  open)
    [ -z "$2" ] && read -r NOTE_PATH || NOTE_PATH="$2"

    if [ -f $NOTE_PATH ]; then
      # Relevant context for vim's NerdTree
      cd "$NOTES_SRC"

      nvim -c "norm zz" \
        -c "set spell" \
        "$NOTE_PATH"
    else
      notify-bad $SCRIPT_NAME "Cannot find note at \"$NOTE_PATH\""
    fi


  ;;

  #
  # Make a PDF out from a markdown note file
  #
  build)
    NOTE_PATH=$2
    PDF_NAME="$(basename "$NOTE_PATH" .md).pdf"

    TITLE="$(cat $NOTE_PATH | grep '# Notes for' | sed 's/# //')"
    CONTENT=""

    pandoc \
      --from gfm \
      --pdf-engine=xelatex \
      --toc \
      --metadata=title:"$TITLE" \
      -V geometry:a4paper \
      -V geometry:margin=3.5cm \
      -V linkcolor:blue \
      -o "$NOTES_DIST/$PDF_NAME" "$NOTE_PATH" &
  ;;

  #
  # Open zathura with the PDF of the most recent notes file
  #
  read-last)
    PDF_PATH="$NOTES_DIST/$(ls -r "$NOTES_DIST" | head -n 1)"

    zathura $PDF_PATH
  ;;

  *)
    notify-bad "$SCRIPT_NAME" "Command \"$CMD\" not recognized"

    exit 1
  ;;
esac
