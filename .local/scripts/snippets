#!/usr/bin/bash -e

. "$LIBRARY_HOME/die.sh"
. "$LIBRARY_HOME/read-stdin-or.sh"

# run(name, ...args)
# Runs a snippet file if it has +x permissions, otherwise output it's contents.
run() {
  read -r -a signature <<< "$(readStdinOr "$1")"

  path="$SNIPPETS_HOME/${signature[0]}"

  if [ ! -f "$path" ]; then
    die "Snippet '$path' does not exist"
  fi

  if [ -x "$path" ]; then
    $path "${signature[@]:1}"
  else
    sed '/```toml/,/```/d' < "$path"
  fi
}

# open(name)
# Open a snippet for edit or, if does not exist, create it.
open() {
  name=$(readStdinOr "$1")
  path="$SNIPPETS_HOME/$name"

  if [ ! -f "$path" ]; then
    {
      echo "\`\`\`toml" 
      echo "id=\"$(random uuid)\""
      echo "type=\"snippet\""
      echo "syntax=\"\""
      echo "description=\"\""
      echo "url=\"\""
      echo "tags=[]"
      echo "\`\`\`"
      echo ""
    } > "$path"
  fi

  # Relevant context for vim's NerdTree
  cd "$SNIPPETS_HOME"

  nvim -c "norm zz" -c "set spell" "$name"
}

# ask()
#
ask() {
  rg --files --sortr modified "$SNIPPETS_HOME" \
    | sed 's/^.*\///' \
    | rofi -dmenu \
        -p "$1" \
        -i \
        -case-sensitive false
}

case ${1-ask-use} in
  ask-create)
    name=$(ask " snippets, create or edit:")
    [ -n "$name" ] && st -t such-important -e snippets open "$name"
  ;;
  ask-use)
    name=$(ask " snippets, copy:")

    if [ -n "$name" ]; then
      # not using pipe (run "$name" | copy) since some snippets may output 
      # content without newline 
      copy "$(run "$name")"
    fi
  ;;
  run) run "$2" ;;
  open) open "$2" ;;
  *) die "Command \"$1\" not defined" ;;
esac
