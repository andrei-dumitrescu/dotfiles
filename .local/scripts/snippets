#!/bin/sh

SCRIPT_NAME="~/.local/bin/snippets"
CMD=${1:-ls}

SNIPPETS_HOME="${HOME}/.local/snippets"

case $CMD in
  #
  # Create a new snippet or open existing
  #
  find)
    NAME=$(snippets ls \
      | rofi -dmenu \
          -p "create or edit snippet" \
          -i \
          -case-sensitive false
    )

    if [ -n "$NAME" ]; then
      st -t such-important -e snippets open "$NAME"
    fi
  ;;

  open)
    [ -z "$2" ] && read -r NAME || NAME="$2"

    # Relevant context for vim's NerdTree
    cd "$SNIPPETS_HOME"

    nvim -c "norm zz" \
      -c "set spell" \
      "$NAME"
  ;;

  #
  # Interactive snippet search and paste into current focus
  #
  use)
    NAME=$(snippets ls \
      | rofi -dmenu \
          -p "use snippet" \
          -i \
          -case-sensitive false
    )

    if [ -n "$NAME" ]; then
      snippets paste "$NAME"
    fi
  ;;

  #
  # List all available snippet names
  #
  ls)
    cd "$SNIPPETS_HOME" && rg --files | sort -r
  ;;

  #
  # Execute file or copy it's content to current active window
  #
  paste)
    read -ra SNIP_ARGS <<< "$2"
    SNIP_PATH="${SNIPPETS_HOME}/${SNIP_ARGS[0]}"

    if [ -f "$SNIP_PATH" ]; then

      if [ -x "${SNIP_PATH}" ]; then
        DATA=$(${SNIP_PATH} "${SNIP_ARGS[1]}")
      else
        DATA=$(head --bytes=-1 "${SNIP_PATH}")
      fi

      # put data in both main and middle mouse buffer 
      printf "%s" "$DATA" | xsel -p -i 
      printf "%s" "$DATA" | xsel -b -i 

      # simulate paste actions, should work in almost all situations
      xdotool key shift+Insert
    fi
  ;;

  *)
    notify-bad "$SCRIPT_NAME" "Command \"$CMD\" not recognized"

    exit 1
  ;;
esac
