#!/bin/sh

. "$LIBRARY_HOME/die.sh"

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

updateicon() {
  echo "$1" > /tmp/recordingicon

  # update i3blocks widgets with signal 10
  pkill -SIGRTMIN+13 i3blocks
}

killrecording() {
	ffmpegId="$(cat /tmp/recordingpid)"

	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$ffmpegId"
	rm -f /tmp/recordingpid
	updateicon ""

	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	# sleep 3
	# kill -9 "$ffmpegId"
	# exit
}

screencast() {
  ffmpeg -y \
    -f x11grab \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
    -thread_queue_size 512 \
    -i "$DISPLAY" \
    -f pulse -i default \
    -c:v h264 -crf 0 -preset ultrafast -c:a aac \
    -tune zerolatency \
    -draw_mouse 1 \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
  echo $! > /tmp/recordingpid

  updateicon "‚è∫Ô∏è üéôÔ∏è"
}

video() { 
  ffmpeg \
    -f x11grab \
    -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" \
    -i "$DISPLAY" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid

	updateicon "‚è∫Ô∏è"
}

webcamhidef() { 
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid

  updateicon "üé•"
}

webcam() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! > /tmp/recordingpid

	updateicon "üé•"
}

audio() {
	ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid

	updateicon "üéôÔ∏è"
}

videoselected() {
	slop -f "%x %y %w %h" > /tmp/slop
	read -r X Y W H < /tmp/slop
	rm /tmp/slop

	ffmpeg \
    -f x11grab \
    -framerate 60 \
    -video_size "$W"x"$H" \
    -i :0.0+"$X,$Y" \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/box-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid

	updateicon "‚è∫Ô∏è"
}

reduce() {
  ffmpeg -i "$1" -vcodec libx264 -crf 24 "$2"
}

ask() {
  if [ -f /tmp/recordingpid ]; then
    shouldEnd=$(printf "No\\nYes" \
      | rofi -dmenu -i -p "Recording still active. End recording?" \
    ) 

    if [ "$shouldEnd" = "Yes" ]; then
      killrecording
    fi
    
    exit
  fi

  choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam\\nwebcam (hi-def)" \
    | rofi -dmenu -i -p "Ô©¶ :" \
  )

  case "$choice" in
    screencast) screencast;;
    audio) audio;;
    video) video;;
    *selected) videoselected;;
    webcam) webcam;;
    "webcam (hi-def)") webcamhidef;;
  esac
}

case "${1-ask}" in
  ask) ask ;;
	screencast) screencast ;;
	audio) audio ;;
	video) video ;;
  reduce) reduce $@ ;;
	*selected) videoselected ;;
	kill) killrecording ;;
  *) die "Command \"$1\" not defined" ;;
esac
