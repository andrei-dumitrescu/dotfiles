```toml
id="fb0df310-d0d3-48b7-b0f9-42ab02a5c4ba"
type="snippet"
syntax="typescript"
description=""
url=""
tags=["javascript", "typescript", "crud", "singleton"]
createdAt="2022-07-23T11:27:35+02:00"
```

import { findWith } from "@asd14/m"

type Item = {
  id: string
  text: string 
}

const _data: Item[] = [];

type TodoCRUDStoreType = {
  create: (input: Item) => Item,
  read: (id: string) => Item,
  update: (id: string, data: Omit<Partial<Item>, "id">) => Item,
  remove: (id: string) => Item,
}

const TodoCRUDStore: TodoCRUDStoreType = Object.freeze({
  create: () => {},
  read: () => {},
  update: () => {},
  remove: () => {},
})

// A frozen object can no longer be changed; freezing an object prevents new
// properties from being added to it, existing properties from being removed,
// prevents changing the enumerability, configurability, or writability of
// existing properties, and prevents the values of existing properties from
// being changed. In addition, freezing an object also prevents its prototype
// from being changed. freeze() returns the same object that was passed in.
// 
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze

export { TodoStore };
