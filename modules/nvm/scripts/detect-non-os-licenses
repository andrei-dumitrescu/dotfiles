#!/usr/bin/env sh

# NAME
#  detect-non-os-licenses - Detect non Open Source licenses
#
# SYNOPSIS
#  detect-non-os-licenses [base_dir]
#
# DESCRIPTION
#  Check the licenses of the dependencies and devDependencies in the
#  package.json file of a Node.js package.
#
# ERROR CODES
#  1 - Missing Operating System dependency
#  2 - Missing/invalid argument
#  3 - Non OpenSource licenses found in the project dependencies
#  4 - Dependency package.json not found
#  5 - Main package.json not found

ALLOWED_LICENSES="MIT
Unlicense
Apache-2.0
BSD-2-Clause
BSD-3-Clause
CC0-1.0
ISC"
NON_OPEN_SOURCE_LICENCES=""
BASE_DIR="${1:-$(pwd)}"
BASE_PACKAGE_JSON="$BASE_DIR/package.json"

# Check if the package license is one of the allowed licenses
#
# SYNOPSIS
#  check_license <license> <package_name>
check_license() {
  license="$1"
  package_name="$2"

  if printf '%s' "$ALLOWED_LICENSES" | grep -q "$license"; then
    echo "✔ $package_name: $license"
  else
    NON_OPEN_SOURCE_LICENCES="$package_name: $license\n$NON_OPEN_SOURCE_LICENCES"
    echo "✖ $package_name: $license"
  fi
}

# Find a package package.json in the node_modules directory, if not found
# continue walking up the tree
#
# SYNOPSIS
#  find_package_json <base_dir> <package_name>
#
# RETURNS
#  package.json file path if found, otherwise an empty string
find_package_json() {
  base_dir="$1"
  package_name="$2"

  while [ "$base_dir" != "/" ]; do
    package_json="$base_dir/node_modules/$package_name/package.json"
    if [ -f "$package_json" ]; then
      echo "$package_json"
      return 0
    fi

    base_dir=$(dirname "$base_dir")
  done
}

# Check licenses of the dependencies in package.json and exit with an error if
# a non-OS license is found
#
# SYNOPSIS
#  check_licenses <dependency_type>
check_licenses() {
  dependency_type="$1"
  echo "-- Checking '$dependency_type'..." >&2

  dep_packages=$(jq -r ".${dependency_type} // {} | keys[]" "$BASE_PACKAGE_JSON")
  if [ -z "$dep_packages" ]; then
    echo "No $dependency_type found in package.json" >&2
    return 0
  fi

  for package_name in $dep_packages; do
    package_json=$(find_package_json "$BASE_DIR" "$package_name")

    if [ -z "$package_json" ]; then
      echo "✖ $package_name: package.json not found. Make sure packages are installed before running this script." >&2
      exit 4
    fi

    license=$(jq -r '.license // "Unlicense"' "$package_json")
    check_license "$license" "$package_name"
  done
}

# Main

if ! command -v jq >/dev/null 2>&1; then
  echo "✖ jq is not installed" >&2
  exit 1
fi

if [ ! -f "$BASE_PACKAGE_JSON" ]; then
  echo "✖ package.json not found in $BASE_DIR" >&2
  exit 5
fi

echo "📝 Checking licenses for $(jq -r '.name' "$BASE_PACKAGE_JSON")..."
check_licenses "dependencies"
check_licenses "devDependencies"

if [ -n "$NON_OPEN_SOURCE_LICENCES" ]; then
  echo "" >&2
  echo "✖ Non OpenSource licenses found in the project dependencies" >&2
  echo "$NON_OPEN_SOURCE_LICENCES"
  exit 3
fi
