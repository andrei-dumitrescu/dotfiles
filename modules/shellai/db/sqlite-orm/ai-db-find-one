#!/usr/bin/env dash

# NAME
#  ai-db-find-one - Find a single record for a given table
#
# SYNOPSIS
#  ai-db-find-one <-t table_name> <-w where_clause> [-f filter_clause]
#
# DESCRIPTION
#  Find a single record in a table by providing a sqlite WHERE clause. By
#  default all fields are included, but a filter can be provided to limit the
#  fields returned.
#
# OPTIONS
#  -w, --where <where_clause>
#   The WHERE clause to use when querying the database.
#
#  -t, --table <table_name>
#   The table to query.
#   
#  -f, --filter [filter_clause]
#   The filter clause to use when querying the database. Defaults to "*".
# 
# ERROR CODES
#  1 Input error: unknown flag provided, missing value for flag or missing
#    required flag
#  2 No items found in table with WHERE clause
#  3 More than one item found in table with WHERE clause

CMD_NAME="ai-db-find-one"
MODE="json"

# ╭───┤ Input validation 
# ╰─

parse_flags() {
  while [ "$#" -gt 0 ]; do
    case $1 in
      -w|--where) 
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          where=$2; shift
        else
          print-error "-w|--where flag requires a value" "$CMD_NAME" >&2
          exit 1
        fi
      ;;
      -t|--table) 
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          table=$2; shift
        else
          print-error "-t|--table flag requires a value" "$CMD_NAME" >&2
          exit 1
        fi
      ;;
      -m|--mode) 
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          MODE=$2; shift
        else
          print-error "-m|--mode flag requires a value" "$CMD_NAME" >&2
          exit 1
        fi
      ;;
      --) shift; break ;;
      -*)
        # Unknown flag, skipp. If it has value, skip that too
        if [ "$2" ] && [ "${2#-}" = "$2" ]; then
          shift
        fi
      ;;
      *) break ;;
    esac
    shift
  done
}

parse_flags "$@"

if [ -z "$where" ]; then
  print-error "Flag -w|--where is required" "$CMD_NAME" >&2
  exit 1
fi

if [ -z "$table" ]; then
  print-error "Flag -t|--table is required" "$CMD_NAME" >&2
  exit 1
fi

# ╭──────────────────────
# │ Main. Start here.
# ╰────────

count=$(ai-db-count -w "$where" -m csv "$table")
data=$(ai-db-find-many "$@")

if [ "$count" -eq 0 ]; then
  print-error "No records in table $(underline "$table") with where $(underline "$where")" "$CMD_NAME" >&2
  exit 2
fi

if [ "$MODE" = "json" ]; then
  if [ "$count" -gt 1 ]; then
    print-error "More than one record found in table $(underline "$table") with where $(underline "$where")" "$CMD_NAME" >&2
    exit 3
  fi

  printf "%s" "$data" | jq '.[0]'
else
  printf "%s" "$data"
fi

